const int ca=2147483647,cb=-2147483648, cg = 0;    
const int CA1=-15,CB1=-20, CG1 = 9;    
const char cc='a',cd='+',ce='*', ch = '0';
const char cf='_'    ;

int va;
char vb;
int vc,vd,arr[10];
char charr[3];

void tempadd(int w){
    w = w+1;
    printf(w);
}

void caltest() {
    int a,b,c,d,e;
    a = -13++79;
    b = 13 +-97;
    c = 13*-79;
    d = 79/-13;
    e = 1079 * 18 - +24 *5 +9/-2;
    printf(a);
    printf(b);
    printf(c);
    printf(d);
    printf(e);    
    return;
}

char returnq(){
    return ('Q');
}

void whiletest(){
    int i;
    i = 0;
    while (i < 10){
        i = i+1;
        printf("in circle", i);
    }
    return;
}

int switchtest(int a){
    switch(a) {
        case 1 : printf("reached 1");
        case 2 : {
            printf("into to brace");
            return (50);
        }
        case 3 : {whiletest(); return(233);}
        default : printf("default reached!");
    }
    return (0);
}

char relationcover(char c) {
    int a,count;
    char b;
    if(c == 'a') {
        count = 0;
        a = 97;
        b = 'a';
        if(a == c) {
            printf("same?");
            count = count +1;
        }
        if (b == c) {
            printf("still same?");
            count = count +1;
        }
        if(count == 2)
            printf("EQU is good");
        a = 111;
    }
    if (a != 110) {
        count = 0;
        if(c != b){
            count = count +1;
            printf("you cant see this");
        }
        if(a != 111){
            count = count +1;
            printf("cannot see this neither");
        }
        if(a != c){
            count = count +1;
            printf("maybe this is ok");
        }
        if(count == 1){
        printf("NEQ is good");
        }
        a = 100;
    }
    if (a > 99) {
        count =0;
        if (a > count)
            count = count +1;
        if (a > c)
            count = count +1;
        if (a > 99)
            if (a > 98)
                count = count +1;
        if(count == 3){
            printf("Greater is good");
        }            
        a = 77;
    }
    if (a <88) {
        count = 0;
        if(a < c) 
            count = count +1;
        if(b < c)
            count = count +1;
        if(count < a)
            count = count +1;
        if(count == 2)
            printf("Less is good");
    }
    if (a >=66){
        count = 0;
        if(a >= 50)
            count = count +1;
        if(a >= c)
            count = count  +1;
        if(b >=c)
            count = count +1;
        if(count ==2)
            printf("GTE is good");
    }
    if (a <= 111) {
        count = 0;
        if(c <= a)
            count =count +1;
        if (b <=c)
            count = count +1;
        if(a <= 1000)
            count = count +1;
        if(count ==2)
            printf("LTE is good");
        count = 1;
    }
    if (count)
        printf("you can see this for count =",a);
    count = 0;
    if (count)
        printf("but you should never see this");
    return (c);
}

int f(int n){        
    if (n <= 0){
        printf("error!");
        return (0);    
    }
    if (n == 1)
        return (1);
    if (n == 2)
        return (1);
    return (f(n-1) + f(n-2));
}

void main(){        
    int cg,flag1,re3;
    int re1,para;
    char flag2;
    char c,re2,cn[6];        
    printf("Calculate test begin");
    tempadd(15);
    caltest();
    printf("printf test start!");
    printf(" !#$%&'()*+,-./0123456789:;<=>? @ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}");
    printf("Max & Min integer:",ca);
    printf(cb);
    printf("assign test start!");
    cg = 10;
    va = CA1;
    arr[0] = 233;
    charr[1] = 81;
    cn[3] = 43;
    vb = charr[1];    
    printf(va);
    printf(arr[0]);
    printf(charr[1]);
    printf(cn[3]);
    printf(vb);
    printf("print char:", ce);
    printf(cc);
    printf(returnq());
    printf("print expression");
    printf(ca + cb);
    printf(ch + ch);
    printf(ch + CG1);
    printf(ca + cb);
    printf("local or global?");
    if(cg == 0){
        printf("global");
    }
    if(cg == 10){
        printf("local");
    }
    if(CA1 == ca){
        printf("not case sensitive!");
    }
    if(ca != CA1){
        printf("case sensitive!");
    }
    printf("scanf test start! Please input 1 int then 1 char then another int!");
    scanf(flag1, flag2,vc);    
    printf("");
    printf("The first one:",flag1);
    printf("The second one:", flag2);
    printf("Global is: ",vc);
    printf("start while test!");
    whiletest();
    printf("while test finished!\nbegin switchtest!");
    para = 1;
    re1 = switchtest(para);
    printf("get result:",re1);
    para = 2;
    re1 = switchtest(para);
    printf("get result:",re1);
    para = 3;
    re1 = switchtest(para);
    printf("get result:",re1);
    para = 4;
    re1 = switchtest(para);
    printf("get result:",re1);
    printf("start relationcover!");
    c = 'a';
    re2 = relationcover(c);
    printf(re2);
    printf("start recursive!");
    para = 20;
    re3 = f(para);
    printf(re3);
}